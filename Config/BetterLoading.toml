# Enable verbose logging for BetterLoading. This is useful for debugging, but may slow down the game.
VerboseLogging = false
# The TipCache caches information about loading screen tips so that they can be displayed as soon as the loading screen starts after the first run.
[TipCache]
# The internal version number of the TipCache tip blob. If this number is different from the one expected by the mod, the TipCache will be cleared.
Version = 1
# The raw tip blob. NOT intended to be manually edited.
Tips = "UHV0IGNoYWlycyBpbiBmcm9udCBvZiB3b3JrYmVuY2hlcyBzbyB3b3JrZXJzIGNhbiBzaXQgY29tZm9ydGFibHkgd2hpbGUgd29ya2luZy4BQ29yZQBQcmUtd2FyIG1haW5mcmFtZXMgY2FuIGJlIHB1cmNoYXNlZCBpbiBCcm90aGVyaG9vZCBvZiBTdGVlbCBzZXR0bGVtZW50cyBvciB2aWEgY2FyYXZhbiB0cmFkZXJzLCBwcm92aWRlZCB5b3UgYXJlIG5vdCBhdCB3YXIgd2l0aCB0aGVtLgFUaGUgQnJvdGhlcmhvb2QgQ29tcGVuZGl1bSAiQ29udGludWVkIgBJZiB5b3UgbmVlZCBoZWxwIGluIGEgZmlnaHQsIGNhbGwgeW91ciBhbGxpZXMgdXNpbmcgdGhlIGNvbW1zIGNvbnNvbGUuAUNvcmUATGFzc28gY29vbGRvd24gaXMgYWZmZWN0ZWQgYnkgdGhlIHR5cGUgb2YgbGFzc28sIHRoZSBwYXduJ3MgbWVsZWUgc2tpbGwsIGFuZCB0aGUgcGF3bidzIG1hbmlwdWxhdGlvbi4BTWVsZWUgQW5pbWF0aW9uAFRoZXJlIGFyZSBncm93aW5nIHJ1bW9ycyBvZiBmcmlnaHRlbmluZyBmaWd1cmVzIGluIGJsYWNrIHBvd2VyIGFybW9yIHJvYW1pbmcgdGhlIGRlc2VydC4BVGhlIEJyb3RoZXJob29kIENvbXBlbmRpdW0gIkNvbnRpbnVlZCIAR2V5c2VycyBoZWF0IHVwIHJvb21zIGlmIGVuY2xvc2VkLiBUaGlzIGNhbiBiZSBkYW5nZXJvdXMsIG9yIHVzZWZ1bC4BQ29yZQBBc3NpZ24geW91ciBoZXJiaXZvcm91cyBhbmltYWxzIHRvIGFyZWFzIHdpdGggbG90cyBvZiBncmFzcy4gVGhleSdsbCBlYXQgdGhlIGdyYXNzIGFuZCBzcGFyZSB5b3UgdGhlIG5lZWQgdG8gZmVlZCB0aGVtLgFDb3JlAFNtb2tlIHRvdGFsbHkgcHJldmVudHMgdHVycmV0cyBmcm9tIGRldGVjdGluZyB0YXJnZXRzLCBidXQgcGVvcGxlIGNhbiBzdGlsbCBzaG9vdCB3aXRoIHJlZHVjZWQgYWNjdXJhY3kuAUNvcmUAQ29tbWFuZCBidXR0b25zIHdpdGggYSBzbWFsbCBtb3VzZSBpY29uIGNhbiBiZSByaWdodC1jbGlja2VkIGZvciBhZGRpdGlvbmFsIHNwZWNpYWwgY29tbWFuZHMuAUFsbG93IFRvb2wAWW91IGNhbiBzZWxlY3QgdGhlIHByZXZpb3VzIG9yIG5leHQgY29sb25pc3Qgd2l0aCB0aGUgLCBhbmQgLiBrZXlzLgFDb3JlAFlvdSBjYW4gaG9sZCB0aGUgc2hpZnQga2V5IHRvIHF1ZXVlIG9yZGVycyBvbiB5b3VyIGNvbG9uaXN0cy4BQ29yZQBGb2dneSBvciByYWlueSB3ZWF0aGVyIHJlZHVjZXMgdGhlIGFjY3VyYWN5IG9mIHJhbmdlZCB3ZWFwb25zLgFDb3JlAFRoZSBtb3JlIHBvbGx1dGVkIG5lYXJieSB3b3JsZCB0aWxlcyBhcmUsIHRoZSBtb3JlIG9mdGVuIHlvdSdsbCBnZXQgYWNpZGljIHNtb2cuAUJpb3RlY2gAV2hlbiBzdGFydGluZyBhIG5ldyBnYW1lLCB5b3UgY2FuIGNyZWF0ZSBjdXN0b20geGVub3R5cGVzIHdpdGggYW55IGdlbmV0aWMgY29tYmluYXRpb24geW91IHdhbnQuAUJpb3RlY2gASGF2ZSBhbiB1bndhdmVyaW5nbHkgbG95YWwgcHJpc29uZXI/IFRoZSBicmFpbndpcGUgcHN5Y2hpYyByaXR1YWwgd2lsbCBtYWtlIHRoZW0gcmVjcnVpdGFibGUuAUFub21hbHkAIlRoZSBvbmx5IHNhbHZhdGlvbiB0aGlzIHRvcnR1cmVkIHBsYW5ldCBhbmQgaXRzIHBlb3BsZSBoYXZlLiBXaXRob3V0IHVzLCBodW1hbml0eSBpcyBzdXJlIHRvIHBlcmlzaC4iIC0gQnJvdGhlcmhvb2QgU2NyaWJlIFZyZWUBVGhlIEJyb3RoZXJob29kIENvbXBlbmRpdW0gIkNvbnRpbnVlZCIAUHJlc3RpZ2UgYXJtb3IgYW5kIGVsdGV4IGFwcGFyZWwgd2lsbCBhbHNvIHNhdGlzZnkgdGhlIGFwcGFyZWwgcmVxdWlyZW1lbnRzIG9mIHJveWFsIHRpdGxlcy4BUm95YWx0eQBXaGVuIHlvdSBoYXZlIG1vcmUgd2VhbHRoLCBtb3JlIHBvd2VyZnVsIGVuZW1pZXMgYXR0YWNrLiBJZiB5b3Ugd2FudCB0aGUgY2hhbGxlbmdlIHRvIHNjYWxlIHdpdGggdGltZSBpbnN0ZWFkLCBzZWxlY3QgJ1dlYWx0aC1pbmRlcGVuZGVudCBwcm9ncmVzcyBtb2RlJyBpbiB0aGUgc3Rvcnl0ZWxsZXIgc2V0dGluZ3MuAUNvcmUASW4gaXRzIGZyYW50aWMgcmFjZSBmb3IgbG9zdCBrbm93bGVkZ2UsIGl0IGlzIHZlcnkgbGlrZWx5IHRoYXQgdGhlIEJyb3RoZXJob29kIG9mIFN0ZWVsIGV2ZW50dWFsbHkgcmVhY2hlZCB0aGUgcHJlcmVxdWlzaXRlcyBmb3IgaW50ZXJzdGVsbGFyIGpvdXJuZXlzLgFUaGUgQnJvdGhlcmhvb2QgQ29tcGVuZGl1bSAiQ29udGludWVkIgBJZiB5b3UgY2FuJ3QgZGVmZW5kIGFnYWluc3QgYSB0aHJlYXQsIG1ha2UgYSBjYXJhdmFuIGFuZCBydW4uIFlvdSBtYXkgbG9zZSB5b3VyIGhvbWUsIGJ1dCB5b3VyIHN0b3J5IGNhbiBjb250aW51ZS4BQ29yZQBUaGUgaHVudGVyIHN0ZWFsdGggc3RhdCByZWR1Y2VzIHRoZSBjaGFuY2Ugb2YgYW5pbWFsIGF0dGFja3MuIEl0IGlzIGFmZmVjdGVkIGJ5IHRoZSBodW50ZXIncyBhbmltYWxzIGFuZCBzaG9vdGluZyBza2lsbHMuAUNvcmUARHJvcHBpbmcgYSBzdG9uZSBvciBzbGFnIGNodW5rIGluIGEgZG9vcndheSB3aWxsIGZvcmNlIGl0IG9wZW4sIGxlYXZpbmcgeW91IHZ1bG5lcmFibGUgdG8gaG9zdGlsZSB3aWxkbGlmZSBhbmQgcmFpZGVycy4BQ29yZQBUaGUgcHN5Y2hpYyBza2lwIHBvd2VyIHdvcmtzIG9uIHNlbGYsIGFsbGllcywgZW5lbWllcywgYW5kIGV2ZW4gaXRlbXMuIFRoZSB0YWN0aWNhbCBwb3NzaWJpbGl0aWVzIGFyZSBlbmRsZXNzLgFSb3lhbHR5AE1hbnkgbW9kcyBoYXZlIHNldHRpbmdzIHlvdSBjYW4gdHdlYWsgdG8gc3VpdCB5b3VyIHBsYXkgc3R5bGUuIFRoZSBNb2QgU2V0dGluZ3MgYnV0dG9uIGlzIGZvdW5kIGluIHRoZSBPcHRpb25zIG1lbnUuAUFsbG93IFRvb2wAWW91IGNhbiByaWdodC1jbGljayBhbmQgZHJhZyB0byByZW9yZGVyIGNvbG9uaXN0cyBvbiB0aGUgY29sb25pc3QgYmFyLgFDb3JlAEFuaW1hbHMgYXJlIG1vcmUgbGlrZWx5IHRvIGF0dGFjayB3aGVuIGhhcm1lZCBmcm9tIGNsb3NlIHJhbmdlLiBMb25nLXJhbmdlLCBzbG93LWZpcmluZyB3ZWFwb25zIGFyZSBzYWZlc3QgZm9yIGh1bnRpbmcuAUNvcmUAV2FudCB0byBmaW5pc2ggYSBiYXNpYyBBbm9tYWx5IHJlc2VhcmNoIHByb2plY3QgZmFzdGVyPyBBZHZhbmNlZCBlbnRpdGllcyB3aWxsIGNvbnRyaWJ1dGUgdG8geW91ciBjdXJyZW50IGJhc2ljIHJlc2VhcmNoIHByb2plY3QgaWYgeW91IGRvbuKAmXQgaGF2ZSBhbiBhY3RpdmUgYWR2YW5jZWQgcHJvamVjdC4BQW5vbWFseQBEb24ndCBmb3JnZXQgdG8gcGFjayBtZWRpY2luZSBvbiB5b3VyIGNhcmF2YW5zLgFDb3JlAFNvbWUgZmxvb3IgdHlwZXMgYXJlIGZhc3RlciB0byBjbGVhbiB0aGFuIG90aGVycy4gSXQgdGFrZXMgbXVjaCBsb25nZXIgdG8gY2xlYW4gY2FycGV0IGNvbXBhcmVkIHRvIG1ldGFsIHRpbGUuAUNvcmUAWW91IGNhbiBjaGFuZ2Ugc3Rvcnl0ZWxsZXIgYW5kIHBsYXlzdHlsZSBhdCBhbnkgdGltZSB0aHJvdWdoIHRoZSBvcHRpb25zIG1lbnUuAUNvcmUATW91bnRhaW4gYmFzZXMgYXJlIGVhc3kgdG8gZGVmZW5kLiBUaGUgZG93bnNpZGUgaXMgdGhhdCBwZW9wbGUgZ28gY3Jhenkgc3BlbmRpbmcgdG9vIGxvbmcgdW5kZXJncm91bmQuIEFuZCBnaWFudCBpbnNlY3RzLgFDb3JlAFNsb3NoaW5nIHRocm91Z2ggd2F0ZXIgbWFrZXMgcGVvcGxlIHVuaGFwcHkuIEJ1aWxkIGEgYnJpZGdlIHdoZW4geW91IGNhbi4BQ29yZQBZb3UgY2FuIHJlcXVlc3Qgc3BlY2lmaWMgdHlwZXMgb2YgdHJhZGUgY2FyYXZhbnMgdXNpbmcgdGhlIGNvbW1zIGNvbnNvbGUuAUNvcmUARW5lbWllcyBhcmUgbGVzcyBsaWtlbHkgdG8gYXR0YWNrIGNoaWxkcmVuIHdoZW4gdGhleSBhcmUgdW5hcm1lZC4gS2VlcCBraWRzIHNhZmVyIGJ5IG5vdCBnaXZpbmcgdGhlbSB3ZWFwb25zLgFCaW90ZWNoAFBzeWNoaWMgaW52aXNpYmlsaXR5IGRvZXNuJ3Qgd2VhciBvZmYgd2hlbiB5b3UgYXR0YWNrLgFSb3lhbHR5AEdhaW5pbmcgYSBuZXcgbGV2ZWwgb2YgcHN5bGluayBncmFudHMga25vd2xlZGdlIG9mIG9uZSByYW5kb20gcHN5Y2hpYyBwb3dlci4BUm95YWx0eQBJZiBhIHRpdGxlIGhvbGRlciBkaWVzLCB0aGVpciB0aXRsZSBnb2VzIHRvIHRoZWlyIGNob3NlbiBoZWlyLgFSb3lhbHR5AEVNUCBidXJzdHMgd2lsbCB0ZW1wb3JhcmlseSBkaXNhYmxlIHR1cnJldHMgYW5kIHNoaWVsZHMuAUNvcmUAUmlnaHQtY2xpY2sgYW5kIGRyYWcgdG8gaGF2ZSB5b3VyIGRyYWZ0ZWQgZmlnaHRlcnMgZm9ybSBhIGxpbmUuIEJ1bmNoZWQtdXAgdGFyZ2V0cyBhcmUgZWFzeSB0byBoaXQhAUNvcmUAIkFub3RoZXIgZ2xvcmlvdXMgZGF5IGluIHRoaXMgbWFuJ3MgYXJteSAhIgFUaGUgQnJvdGhlcmhvb2QgQ29tcGVuZGl1bSAiQ29udGludWVkIgBDaGlsZHJlbiBjYW4gc2xlZXAgaW4gdGhlIHNhbWUgcm9vbSBhcyBwYXJlbnRzIGFuZCBvdGhlciBjaGlsZHJlbiB3aXRob3V0IGFueSBuZWdhdGl2ZSBtb29kIGVmZmVjdC4BQmlvdGVjaABTaGlmdC1jbGlja2luZyB0aGUgbmFtZSBvZiBhIHdvcmsgdHlwZSBpbiB0aGUgV29yayB0YWIgY2hhbmdlcyBzZXR0aW5ncyBmb3IgYWxsIGNvbG9uaXN0cyBhdCBvbmNlLgFDb3JlAFRoZSBza2lwIGFiZHVjdGlvbiBwc3ljaGljIHJpdHVhbCBwcmlvcml0aXplcyBuZWFyYnkgZW5lbWllcywgbGV0dGluZyB5b3UgYWJkdWN0IHJhaWRlcnMgb24geW91ciBtYXAuAUFub21hbHkAQmUgY2FyZWZ1bCB3aGF0IHlvdSBjb25zdHJ1Y3Qgb24gYnJpZGdlcy4gQnJpZGdlcyBjb2xsYXBzZSBlYXNpbHkgdW5kZXIgZXhwbG9zaW9ucywgYW5kIHlvdXIgYnVpbGRpbmdzIHdpbGwgZ28gd2l0aCB0aGVtLgFDb3JlAER1cmluZyBlbmNvdW50ZXJzIGF3YXkgZnJvbSBob21lLCB5b3UgY2FuIHBsYWNlIGEgY2FyYXZhbiBoaXRjaGluZyBzcG90IHRvIGtlZXAgeW91ciBhbmltYWxzIGZyb20gd2FuZGVyaW5nLgFDb3JlAFVubGVzcyB5b3UgcHJvdmUgeW91ciBBbWVyaWNhbiBjaXRpemVuc2hpcCwgdGhlIEVuY2xhdmUgd2lsbCBhbHdheXMgYmUgaG9zdGlsZSB0byB5b3UuIFdoZW5ldmVyLiBGb3Igd2hhdGV2ZXIgcmVhc29uLgFUaGUgQnJvdGhlcmhvb2QgQ29tcGVuZGl1bSAiQ29udGludWVkIgBXaGVuIHRhcmdldGluZyBhIGNvbG9uaXN0IHdpdGggYW4gYWJpbGl0eSBvciBpdGVtLCB5b3UgY2FuIGFsc28gdGFyZ2V0IHRoZWlyIHBvcnRyYWl0IGluIHRoZSB0b3AgY29sb25pc3QgYmFyLgFDb3JlAENyZWF0dXJlcyB3aXRoIGhpZ2hlciBwc3ljaGljIHNlbnNpdGl2aXR5IGFyZSBhZmZlY3RlZCBtb3JlIGJ5IHBzeWNoaWNzLgFSb3lhbHR5AEx1Y2lmZXJpdW0gY2FuIGhlYWwgc2NhcnMgLSBldmVuIHRob3NlIG9uIHRoZSBleWUgb3IgYnJhaW4uIEl0IGlzLCBob3dldmVyLCBhIHBlcm1hbmVudCBjb21taXRtZW50LgFDb3JlAFlvdSBjYW4gaG9sZCB0aGUgYWx0IGtleSB0byBzaG93IGRldGFpbGVkIGluZm9ybWF0aW9uIGFib3V0IGEgc3BlY2lmaWMgdGlsZS4BQ29yZQBSaW1Xb3JsZCBpcyBhIHN0b3J5IGdlbmVyYXRvciwgbm90IGEgc2tpbGwgdGVzdC4gQSBydWluZWQgY29sb255IGlzIGEgZHJhbWF0aWMgdHJhZ2VkeSwgbm90IGEgZmFpbHVyZS4BQ29yZQBZb3UgY2FuIGNoYW5nZSB0aGUgaGVpciBvZiBhIHRpdGxlIGhvbGRlciB0aHJvdWdoIHRoZSBjb21tcyBjb25zb2xlLiBIb3dldmVyLCB0aGlzIHJlcXVpcmVzIGNvbXBsZXRpbmcgYSByaXR1YWwuAVJveWFsdHkAWW91IGNhbiBjYXJyeSBhIGRvd25lZCBhbGx5IHdoaWxlIHVzaW5nIHRoZSBqdW1wIHBhY2suIEFlcmlhbCByZXNjdWVzIHNhdmUgbGl2ZXMuAVJveWFsdHkARGlmZmVyZW50IHRlcnJhaW4gaGFzIGRpZmZlcmVudCBpbmhlcmVudCBjbGVhbmxpbmVzcyBsZXZlbHMuIFRpbGVzIGFyZSBpbmhlcmVudGx5IGNsZWFuOyBkaXJ0IGlzIGluaGVyZW50bHkgZGlydHkuAUNvcmUAUmlnaHQtY2xpY2tpbmcgYSBudW1iZXIgaW4gdGhlIFdvcmsgdGFiIHVzaW5nIG1hbnVhbCBwcmlvcml0aWVzIHdpbGwgcmVkdWNlIHRoZSBwcmlvcml0eSBpbnN0ZWFkIG9mIGluY3JlYXNpbmcgaXQuAUNvcmUAUHJlc3NpbmcgdGhlICJIb21lIiBrZXkgd2lsbCBhbGxvdyBhbGwgZm9yYmlkZGVuIHRoaW5ncyBvbiB0aGUgbWFwLgFBbGxvdyBUb29sAEF2b2lkIHVzaW5nIHN0b25lIGZvciBkb29ycy4gVGhleSBvcGVuIHZlcnkgc2xvd2x5LCB3aGljaCB3YXN0ZXMgeW91ciBjb2xvbmlzdHMnIHRpbWUuAUNvcmUAUHJpc29uZXJzIHdpbGwgam9pbiBtdWNoIHF1aWNrZXIgYW5kIGF0dGVtcHQgZmV3ZXIgYnJlYWtvdXRzIHdoZW4gdGhleSdyZSBpbiBhIGdvb2QgbW9vZC4BQ29yZQBUaGUgQnJvdGhlcmhvb2Qgb2YgU3RlZWwgZmllcmNlbHkgcHJvdGVjdHMgaXRzIGtub3dsZWRnZS4gTmV2ZXJ0aGVsZXNzLCBzb21lIGV4b3RpYyBtZXJjaGFudHMgY2FuIHN0aWxsIGdpdmUgeW91IGFjY2VzcyB0byB0aGVpciB0ZWNobm9sb2dpZXMuAVRoZSBCcm90aGVyaG9vZCBDb21wZW5kaXVtICJDb250aW51ZWQiAFlvdSBjYW4gZ2l2ZSBwcmlzb25lcnMgYXMgZ2lmdHMuIEdpdmluZyBhIHByaXNvbmVyIGJhY2sgdG8gdGhlaXIgb3duIGZhY3Rpb24gd2lsbCBiZSBoaWdobHkgYXBwcmVjaWF0ZWQuAUNvcmUAVGVycm9yLWluZHVjaW5nIGJ1aWxkaW5ncyBhZmZlY3QgYW55b25lIHdpdGhpbiBhIDUtY2VsbCByYWRpdXMuAUlkZW9sb2d5AFVzaW5nIGEgcHN5Y2hpYyBwb3dlciBvbiBhbiBhbGx5IHdpbGwgaGFybSBmYWN0aW9uIHJlbGF0aW9ucyAtIGJ1dCBvbmx5IGlmIGl0IGhhcyBuZWdhdGl2ZSBlZmZlY3RzLgFSb3lhbHR5AERlZXAgdW5kZXJncm91bmQgY2F2ZXJucyBoYXZlIGEgbmF0dXJhbGx5IHN0YWJsZSB0ZW1wZXJhdHVyZSwgZXZlbiBpZiBpdCdzIHZlcnkgaG90IG9yIGNvbGQgb3V0c2lkZS4BQ29yZQBXaGVuIGZpZ2h0aW5nIGEgbWVjaCBjbHVzdGVyLCB0cnkgc2hvb3RpbmcgdGhlaXIgcG93ZXIgY2VsbHMuIFRoZXkgZXhwbG9kZSwgZGVhbGluZyBoZWF2eSBkYW1hZ2UgdG8gc3Vycm91bmRpbmcgY3JlYXR1cmVzIGFuZCBzdHJ1Y3R1cmVzLgFSb3lhbHR5AENhcmF2YW5zIG1vdmUgZmFzdGVyIGlmIHRoZXkgaW5jbHVkZSByaWRlYWJsZSBhbmltYWxzIGxpa2UgaG9yc2VzLCBkb25rZXlzIGFuZCBkcm9tZWRhcmllcy4BQ29yZQBFbnRpcmUgaGVyZHMgb2YgYW5pbWFscyBtYXkgYXR0YWNrIHlvdSB3aGVuIHlvdSB0cnkgdG8gaHVudCB0aGVtLiBBY2NlcHQgdGhlIHJpc2sgYmVmb3JlIGh1bnRpbmcsIG9yIGNob29zZSB3ZWFrZXIgcHJleS4BQ29yZQBUaGUgIkVxdWFscyIga2V5IGFjdGl2YXRlcyB0aGUgZmlyc3QgdG9vbCByaWdodC1jbGljayBhY3Rpb24gd2hlbiBzb21ldGhpbmcgaXMgc2VsZWN0ZWQuAUFsbG93IFRvb2wARW5lbXkgZmFjdGlvbiBiYXNlcyBhcmUgdmVyeSB3ZWxsLWRlZmVuZGVkLiBZb3UgZG9uJ3QgbmVlZCB0byBhdHRhY2sgdGhlbSAtIGJ1dCBiZSB3ZWxsLXByZXBhcmVkIGlmIHlvdSBjaG9vc2UgdG8gdHJ5LgFDb3JlAElmIHlvdSBodW50IGJvb21yYXRzIGFuZCBib29tYWxvcGVzIHdoZW4gaXQncyByYWluaW5nLCB0aGVpciBkZWF0aHMgd29uJ3QgY2F1c2UgZm9yZXN0IGZpcmVzLgFDb3JlAFlvdSBjYW4gdXNlIHRyYW5zcG9ydCBwb2RzIHRvIHNlbmQgZ2lmdHMgZGlyZWN0bHkgdG8gb3RoZXIgZmFjdGlvbnMnIGJhc2VzIC0gZXZlbiB5b3VyIGVuZW1pZXMuIFRoaXMgaW1wcm92ZXMgZmFjdGlvbiByZWxhdGlvbnMuAUNvcmUAVHVycmV0cyBleHBsb2RlIHdoZW4gdGhleSB0YWtlIGEgbG90IG9mIGRhbWFnZS4gRG9uJ3QgcHV0IHRoZW0gdG9vIGNsb3NlIHRvZ2V0aGVyLCBhbmQgZG9uJ3QgcHV0IHlvdXIgcGVvcGxlIHRvbyBjbG9zZSB0byB0aGVtLgFDb3JlAEVhY2ggY29sb25pc3RzJyBtb29kIGlzIGRpc3BsYXllZCBpbiB0aGUgYmFja2dyb3VuZCBvZiB0aGVpciBpY29uIGluIHRoZSBjb2xvbmlzdCBiYXIgYXQgdGhlIHRvcCBvZiB0aGUgc2NyZWVuLgFDb3JlAFNldCBzY2hlZHVsZXMgd2l0aCBsb25nIHN0cmV0Y2hlcyBvZiBvbmUgYWN0aXZpdHkgdG8gbWluaW1pemUgdHJhdmVsIHRpbWUuAUNvcmUAUHN5Y2hpYyBwb3dlcnMgY2FuIGdpdmUgeW91IHNpZ25pZmljYW50IGFkdmFudGFnZSBpbiBjb21iYXQuAVJveWFsdHkAQmVmb3JlIGZvcm1pbmcgYSBjYXJhdmFuLCBjb2xsZWN0IHRoZSBpdGVtcyB5b3Ugd2FudCB0byBzZW5kIGluIGEgc3RvY2twaWxlIG5lYXIgeW91ciBjYXJhdmFuIGhpdGNoaW5nIHNwb3QuIFRoaXMgd2lsbCBtYWtlIHBhY2tpbmcgbXVjaCBmYXN0ZXIuAUNvcmUAWW91IGNhbiBhbmFseXplIHRoZSBjaGFuY2UgYSBzaG90IHdpbGwgaGl0IGJ5IHNlbGVjdGluZyB0aGUgc2hvb3RlciBhbmQgcGxhY2luZyB0aGUgbW91c2Ugb3ZlciB0aGUgdGFyZ2V0LgFDb3JlAElmIHlvdSBjaG9vc2UgdG8gcGxheSBmb3IgdGhlIEVuY2xhdmUsIGV4cGVjdCBzdHJvbmcgb3Bwb3NpdGlvbiBmcm9tIG90aGVyIGZhY3Rpb25zLCBhbmQgdmVyeSBmZXcgYWxsaWVzLgFUaGUgQnJvdGhlcmhvb2QgQ29tcGVuZGl1bSAiQ29udGludWVkIgBQbGFjZSB0aGUgY2FyYXZhbiBoaXRjaGluZyBzcG90IHdoZXJlIHlvdSB3YW50IHlvdXIgY2FyYXZhbnMgdG8gZm9ybSB1cC4gSXQncyB1c3VhbGx5IGJlc3QgdG8gcGxhY2UgaXQgbmVhciB5b3VyIHN0b3JhZ2UgYXJlYXMuAUNvcmUASWYgeW91IGhhdmUgdW50cmFpbmVkIGFuaW1hbHMgaW4geW91ciBjYXJhdmFuLCB5b3UgY2FuIHNwbGl0IHRoZW0gaW50byBhIHNlcGFyYXRlIGNhcmF2YW4gYmVmb3JlIGF0dGFja2luZyBhbiBlbmVteSwgdG8ga2VlcCB0aGVtIG91dCBvZiB0aGUgZmlnaHQuAUNvcmUAU3RvcmUgYm9va3MgaW4gYm9va2Nhc2VzLiBUaGlzIGluY3JlYXNlcyB0aGUgYmVhdXR5IG9mIGEgcm9vbSwgbWFrZXMgbmVhcmJ5IHJlc2VhcmNoIGJlbmNoZXMgZmFzdGVyLCBhbmQgaW5jcmVhc2VzIHRoZSBYUCBhbmQgcmVjcmVhdGlvbiBnYWluZWQgZnJvbSByZWFkaW5nLgFDb3JlAFRoZSBCcm90aGVyaG9vZCBvZiBTdGVlbCBvZnRlbiBtYWludGFpbnMgdW5zdGFibGUgYW5kIHBhcmFub2lkIHJlbGF0aW9ucyB0b3dhcmQgb3V0c2lkZXJzLiBGb3J0dW5hdGVseSwgdGhleSBtb3N0bHkgc3RhbmQgcmVjZXB0aXZlIHRvIGFjdHMgb2YgZ29vZHdpbGwuAVRoZSBCcm90aGVyaG9vZCBDb21wZW5kaXVtICJDb250aW51ZWQiAFNvbWUgY29sb25pc3RzIGFyZSB3b3JzZSB0aGFuIHVzZWxlc3MuIEJhZCBhbGxpZXMgYXJlIHBhcnQgb2YgdGhlIGNoYWxsZW5nZS4BQ29yZQBUaGUgRW1waXJlIGJlc3Rvd3MgYSBmcmVlIGxldmVsIG9mIHBzeWxpbmsgdXBvbiBhbnlvbmUgd2hvIGVhcm5zIHRoZSB0aXRsZSByZXF1aXJlZCB0byB1c2UgaXQuAVJveWFsdHkAUHJlc3NpbmcgdGhlICJFcXVhbHMiIGtleSBhZnRlciBzZWxlY3RpbmcgYSBtaW5lYWJsZSByZXNvdXJjZSB3aWxsIGRlc2lnbmF0ZSB0aGUgd2hvbGUgY2x1c3RlciBmb3IgbWluaW5nLgFBbGxvdyBUb29sAFlvdSBjYW4gaGF2ZSBtdWx0aXBsZSByZXNlYXJjaGVycyB3b3JraW5nIHNpbXVsdGFuZW91c2x5IGF0IG11bHRpcGxlIHJlc2VhcmNoIHRhYmxlcy4BQ29yZQBCdWlsZGluZyB5b3VyIHdob2xlIGNvbG9ueSBpbiBvbmUgc3RydWN0dXJlIHNhdmVzIHJlc291cmNlcywgYnV0IGFsc28gbWFrZXMgaXQgZGlmZmljdWx0IHRvIGNvbnRhaW4gZmlyZXMuAUNvcmUAQ3V0ZSB0YW1lIGFuaW1hbHMgd2lsbCBudXp6bGUgeW91ciBjb2xvbmlzdHMsIGltcHJvdmluZyB0aGVpciBtb29kLgFDb3JlAFRoZSBFbmNsYXZlIGlzIGEgcG9zdC1XYXIgaW5zdGl0dXRpb24gdGhhdCBkZXZlbG9wZWQgZnJvbSBjb250aW51aXR5IG9mIGdvdmVybm1lbnQgb2YgdGhlIHByZS1XYXIgZmVkZXJhbCBnb3Zlcm5tZW50IG9mIHRoZSBVbml0ZWQgU3RhdGVzIG9mIEFtZXJpY2EsIGZyZXF1ZW50bHkgc3R5bGluZyBpdHNlbGYgYXMgdGhlIFVuaXRlZCBTdGF0ZXMgb2YgQW1lcmljYS4BVGhlIEJyb3RoZXJob29kIENvbXBlbmRpdW0gIkNvbnRpbnVlZCIASXTigJlzIG5ldmVyIGdhbWUgb3Zlci4gSWYgZXZlcnlvbmUgaXMgZGVhZCBvciBnb25lLCB5b3UgY2FuIGNyZWF0ZSBuZXcgd2FuZGVyZXJzIHRvIHRha2Ugb3ZlciB0aGUgcmVtYWlucyBvZiB5b3VyIGNvbG9ueS4BQ29yZQBDbGVhbiBsYWJzIHdpdGggc3RlcmlsZSB0aWxlIGdpdmUgcmVzZWFyY2ggc3BlZWQgYm9udXNlcy4BQ29yZQBHb2luZyBvdmVyIHlvdXIgbmV1cmFsIGhlYXQgbGltaXQgY2FuIHNhdmUgeW91IGluIGEgZGVzcGVyYXRlIHNpdHVhdGlvbiAtIGJ1dCB0aGUgcHN5Y2hpYyBicmVha2Rvd24gY2FuIGxhc3QgYSB3aGlsZS4BUm95YWx0eQBLZWVwaW5nIHByaXNvbmVycyB0b2dldGhlciBzYXZlcyBzcGFjZS4gSG93ZXZlciwgcHJpc29uZXJzIGtlcHQgdG9nZXRoZXIgd2lsbCB0cnkgdG8gYnJlYWsgb3V0IHRvZ2V0aGVyLgFDb3JlAFdoZW4gc29tZXRoaW5nIGlzIHNlbGVjdGVkLCB5b3UgY2FuIHBpY2sgdXAgdGhlIGFwcHJvcHJpYXRlIHRvb2wgYnkgaG9sZGluZyBTaGlmdCBhbmQgY2xpY2tpbmcgb25lIG9mIHRoZSBjb21tYW5kIGJ1dHRvbnMuAUFsbG93IFRvb2wAWW91IGNhbiBjaGFuZ2UgdG8gYSAxMiBob3VyIGNsb2NrLCBvciBjaGFuZ2UgQ2Vsc2l1cyB0ZW1wZXJhdHVyZXMgdG8gRmFocmVuaGVpdCwgaW4gdGhlIG9wdGlvbnMgbWVudS4BQ29yZQBTb21lIGFuaW1hbHMgcHJvZHVjZSBhIGxvdCBvZiBmaWx0aC4gS2VlcCB5b3VyIGVsZXBoYW50cyBhbmQgY2F0dGxlIG91dHNpZGUuAUNvcmUARU1QIGJ1cnN0cyBpbnN0YW50bHkgYnJlYWsgcGVyc29uYWwgc2hpZWxkcy4BQ29yZQBXaGVuIGRlc2lnbmluZyBkZWZlbmNlcywgYXNzdW1lIGVuZW1pZXMgd2lsbCBnZXQgaW5zaWRlIHVzaW5nIGRyb3AgcG9kcyBvciB0dW5uZWxzLiBCdWlsZCBpbnRlcm5hbCBkZWZlbnNpdmUgcG9zaXRpb25zLgFDb3JlAFNsYXZlcyB3b3JrIHNsb3dlciB0aGFuIG5vcm1hbCBjb2xvbmlzdHMgZHVlIHRvIGxhY2sgb2YgbW90aXZhdGlvbi4BSWRlb2xvZ3kAVGhlICJTZWxlY3Qgc2ltaWxhciIgdG9vbCBoYXMgbWFueSB1c2VzLiBJdCBjYW4gaGVscCBmaW5kIG9yZSBkZXBvc2l0cywgaGFydmVzdCB3aWxkIGhlYWxyb290IGFuZCBkZWNvbnN0cnVjdCBjYWJsZXMgdW5kZXIgd2FsbHMuAUFsbG93IFRvb2wASW4gdGhlIHdvcmsgdGFiJ3MgbWFudWFsIHByaW9yaXRpZXMgbW9kZSwgMSBpcyBmaXJzdCBwcmlvcml0eSwgd2hpbGUgNCBpcyBsYXN0IHByaW9yaXR5LgFDb3JlAERyZXNzaW5nIHlvdXIgcHN5Y2FzdGVycyBpbiBlbHRleCBnZWFyIHdpbGwgaW5jcmVhc2UgdGhlaXIgbmV1cmFsIGhlYXQgbGltaXQgYW5kIGRpc3NpcGF0aW9uIHJhdGUuAVJveWFsdHkAQ2FyZWZ1bGx5LXNsYXVnaHRlcmVkIGFuaW1hbHMgeWllbGQgbW9yZSBtZWF0IGFuZCBsZWF0aGVyIHRoYW4gdGhvc2Ugd2hvIHdlcmUga2lsbGVkIHZpb2xlbnRseS4BQ29yZQBUaGUgbW9yZSBmYWN0aW9ucyB5b3UgYXJlIGFsbGllZCB3aXRoLCB0aGUgbW9yZSByYW5kb20gdHJhZGVycyBhbmQgbWlsaXRhcnkgYWlkIHlvdSB3aWxsIHJlY2VpdmUuAUNvcmUAU21hbGxlciBjYXJhdmFucyBnZXQgYXR0YWNrZWQgbGVzcyBvZnRlbiBiZWNhdXNlIHRoZXkncmUgbGVzcyB2aXNpYmxlLgFDb3JlAFNvbWUgdG9vbHMgaW4gdGhlIE9yZGVycyBtZW51IGJlaGF2ZSBkaWZmZXJlbnRseSB3aGVuIHVzZWQgd2l0aCBtb2RpZmllciBrZXlzLiBIb3ZlciBvdmVyIHRoZSB0b29scyBmb3IgbW9yZSBpbmZvcm1hdGlvbi4BQWxsb3cgVG9vbABUaGUgbGV0aGFsaXR5IG9mIGV4ZWN1dGlvbiBhbmltYXRpb25zIGNhbiBiZSBhZGp1c3RlZCBpbiB0aGUgbW9kIHNldHRpbmdzLgFNZWxlZSBBbmltYXRpb24ATWVjaGFuaWNhbCBzdHJ1Y3R1cmVzIGJyZWFrIGRvd24gYW5kIHJlcXVpcmUgcmVwbGFjZW1lbnQgY29tcG9uZW50cy4gRG9uJ3QgYnVpbGQgdGhpbmdzIHlvdSBkb24ndCBuZWVkLgFDb3JlAFRoZSBCcm90aGVyaG9vZCBvZiBTdGVlbCBpcyBhIHF1YXNpLXJlbGlnaW91cyB0ZWNobm9jcmF0aWMgbWlsaXRhcnkgb3JkZXIsIGZvdW5kZWQgaW4gMjA4MiBieSBtZW1iZXJzIG9mIHRoZSBVbml0ZWQgU3RhdGVzIEFybWVkIEZvcmNlcyBhbmQgZ292ZXJubWVudCBzY2llbnRpc3RzLgFUaGUgQnJvdGhlcmhvb2QgQ29tcGVuZGl1bSAiQ29udGludWVkIgBXb3JrIGFuZCBtb3ZlbWVudCBzcGVlZCBhcmUgYWZmZWN0ZWQgYnkgbGlnaHRpbmcuIEV2ZXJ5dGhpbmcgaXMgc2xvd2VyIGluIHRoZSBkYXJrLgFDb3JlAFdoZW4gdGFtaW5nIGFuaW1hbHMsIG1ha2Ugc3VyZSB5b3UgaGF2ZSBlbm91Z2ggZm9vZCBvZiB0aGUgY29ycmVjdCB0eXBlIHRvIGZlZWQgdGhlbS4BQ29yZQBQc3lsaW5rIG5ldXJvZm9ybWVycyBjYW4gYmUgYWNxdWlyZWQgdGhyb3VnaCBxdWVzdHMuIFRoZXNlIGl0ZW1zIGNhbiBnaXZlIGEgcGVyc29uIHBzeWNoaWMgcG93ZXJzLgFSb3lhbHR5AFByZWRhdG9ycyB3b24ndCBodW50IGFuaW1hbHMgd2hpY2ggYXJlIG9uIHRoZSBvdGhlciBzaWRlIG9mIGZlbmNlcyBvciBiYXJyaWNhZGVzLgFDb3JlAFlvdSBjYW4gZGlzbWlzcyBsZXR0ZXJzIGFuZCBtZXNzYWdlcyBieSByaWdodC1jbGlja2luZyBvbiB0aGVtLgFDb3JlAEtlZXAgd2VhcG9uIHN0b2NrcGlsZXMgYXdheSBmcm9tIHlvdXIgcHJpc29ucy4gUHJpc29uIGJyZWFrcyBhcmUgbXVjaCBtb3JlIGRhbmdlcm91cyB3aXRoIGd1bnMgYW5kIGV4cGxvc2l2ZXMuAUNvcmUARXhlY3V0aW9uIGFuaW1hdGlvbnMgY2Fubm90IGJlIGNhbmNlbGxlZCBhZnRlciB0aGV5IGhhdmUgc3RhcnRlZCwgYnV0IGlmIGVpdGhlciBwYXduIGlzIGRvd25lZCBvciBraWxsZWQsIHRoZSBhbmltYXRpb24gaXMgY2FuY2VsbGVkLgFNZWxlZSBBbmltYXRpb24AWW91IGNhbiB1c2UgZHJ1ZyBwb2xpY2llcyB0byBoYXZlIHlvdXIgZmlnaHRlcnMgY2FycnkgY29tYmF0IGRydWdzIGxpa2UgZ28tanVpY2UuIEEgcXVpY2sgZG9zZSBhdCB0aGUgc3RhcnQgb2YgY29tYmF0IGNhbiB3aW4gdGhlIGJhdHRsZS4BQ29yZQBTb21lIHRpdGxlIHBlcm1pdHMgYWxsb3cgdGhlIGhvbGRlciB0byBjYWxsIGZvciBtaWxpdGFyeSBhaWQuIFRoaXMgY2FuIHNhdmUgeW91IGluIGEgdG91Z2ggbW9tZW50LgFSb3lhbHR5AElmIHNvbWVvbmUgaGFzIGEgc2VyaW91cyBpbmZlY3Rpb24gaW4gYSBsaW1iLCB5b3UgY2FuIHJlbW92ZSB0aGUgbGltYiB0byBzYXZlIHRoZWlyIGxpZmUuAUNvcmUAV2FudCBhIG5ld2x5IGNyYWZ0ZWQgaXRlbSB0byBiZSB0YWtlbiB0byBhIHNwZWNpZmljIHNoZWxmPyBPbmNlIGEgc2hlbGYgaXMgbmFtZWQgb3IgbGlua2VkIHdpdGggb3RoZXIgc2hlbHZlcywgaXQgd2lsbCBhcHBlYXIgYXMgYSBoYXVsaW5nIGRlc3RpbmF0aW9uIGluIHRoZSBiaWxs4oCZcyDigJxEZXRhaWxz4oCm4oCdIHdpbmRvdy4BQ29yZQBZb3UgY2FuIHNhZmVseSB3YWxrIHJpZ2h0IHBhc3QgYSBkb3JtYW50IG1lY2ggY2x1c3RlciwgYXMgbG9uZyBhcyB5b3UgZG9uJ3QgYXR0YWNrIGl0IG9yIHRyaWdnZXIgYSBwcm94aW1pdHkgYWN0aXZhdG9yLgFSb3lhbHR5AExpZ2h0IHJlY29uIGFybW9ycyBhbGxvd3MgY29sb25pc3RzIHRvIG1pdGlnYXRlIHRoZSBtb3ZlbWVudCBwZW5hbHR5IGluZHVjZWQgYnkgVC1zZXJpZSBhcm1vcnMuAVRoZSBCcm90aGVyaG9vZCBDb21wZW5kaXVtICJDb250aW51ZWQiAFN0cmF3IG1hdHRpbmcgaWdub3JlcyBmaWx0aC4gVXNlIGl0IGFzIHRoZSBmbG9vciBmb3IgeW91ciBiYXJuLgFDb3JlAEluIGEgZ3VuZmlnaHQsIGFsd2F5cyBiZSBiZWhpbmQgY292ZXIhIFJpZ2h0LWNsaWNrIGFuZCBkcmFnIHRvIGhhdmUgeW91ciBkcmFmdGVkIGZpZ2h0ZXJzIGZvcm0gYSBsaW5lLgFDb3JlAENsZWFuIHJvb21zIGluY3JlYXNlIHJlc2VhcmNoIHNwZWVkLCBpbXByb3ZlIG1lZGljYWwgb3V0Y29tZXMsIGFuZCByZWR1Y2UgZm9vZCBwb2lzb25pbmcuIFN0ZXJpbGUgdGlsZXMgbWFrZSByb29tcyBleHRyYS1jbGVhbi4BQ29yZQBNYW55IG1lbnVzIGFsbG93IHlvdSB0byBjbGljayBhbmQgZHJhZyBhIHNldHRpbmcgdG8gJ3BhaW50JyBpdCBvdmVyIG1hbnkgZW50cmllcy4gVGhpcyBldmVuIHdvcmtzIGZvciB0aGluZ3MgbGlrZSBvdXRmaXRzIG9yIGZvb2QgcmVzdHJpY3Rpb25zLgFDb3JlAE1lY2hhbml0b3JzIGNhbiBzdW1tb24gcG93ZXJmdWwgbWVjaHMuIEZpZ2h0IHRoZW0geW91cnNlbGYgLSBvciBkcmF3IHRoZW0gaW50byB5b3VyIGVuZW1pZXMuAUJpb3RlY2gARXZlbiBzZXJpb3VzIHNldGJhY2tzIGRvbid0IG1lYW4gdGhlIGdhbWUgaGFzIHRvIGVuZC4gVHJ5IHBsYXlpbmcgb3V0IGEgbG9zdCBiYXR0bGUgLSBvZnRlbiB0aGUgYmVzdCBzdG9yaWVzIGNvbWUgZnJvbSB0aGUgZGFya2VzdCBzaXR1YXRpb25zLgFDb3JlAE5vYmxlcyBmcm9tIHRoZSBFbXBpcmUgd2lsbCBkZW1hbmQgYWxsIHRoZSBwcml2aWxlZ2VzIG9mIHRoZWlyIHRpdGxlLiBZb3VyIG93biB0aXRsZWQgY29sb25pc3RzIHdpbGwgYmUgbW9yZSBmbGV4aWJsZSwgdW5sZXNzIHRoZXkgYXJlIGdyZWVkeSBvciBqZWFsb3VzLgFSb3lhbHR5AFNsZWVwIGFjY2VsZXJhdG9ycyBpbmNyZWFzZSBjb2xvbmlzdHMnIHNsZWVwIHF1YWxpdHksIGJ1dCBhbHNvIGluY3JlYXNlIGh1bmdlciByYXRlLiBDb25zaWRlciBhc3NpZ25pbmcgdGhlbSBtb3JlIGZyZXF1ZW50LCBzaG9ydCBuYXBzIHRvIHByZXZlbnQgc3RhcnZhdGlvbiBkdXJpbmcgc2xlZXAuAUlkZW9sb2d5AE1hZGRlbmVkIGFuaW1hbHMgd2lsbCBhdHRhY2sgYW55IGh1bWFuLCBpbmNsdWRpbmcgeW91ciBlbmVtaWVzLiBZb3UgY2FuIHVzZSB0aGlzLgFDb3JlAFNvbWUgYW5pbWFscyBleHBsb2RlIHVwb24gZGVhdGguIFlvdSBjYW4gdXNlIHRyYW5zcG9ydCBwb2RzIHRvIGRyb3AgYW5pbWFscyBvbiBlbmVtaWVzLiBUaGluayBhYm91dCBpdC4BQ29yZQBTb21lIG1lY2ggY2x1c3RlcnMgcmVtYWluIGRvcm1hbnQgdW50aWwgZGlzdHVyYmVkLiBVc2UgdGhhdCB0aW1lIHRvIHByZXBhcmUgeW91ciBhdHRhY2suAVJveWFsdHkARXhwbG9zaW9ucyBleHRpbmd1aXNoIGZpcmVzIGluIHRoZWlyIGJsYXN0IHJhZGl1cy4gVGhpcyBtYWtlcyBhcnRpbGxlcnkgc2hlbGxzIHVzZWZ1bCBmb3Igc3RvcHBpbmcgZmlyZXMgd2hlbiB0aGVyZSBpcyBubyBvdGhlciBjaG9pY2UuAUNvcmUAVGhlIEltcGVyaWFsIHJveWFsIHRyaWJ1dGUgY29sbGVjdG9yIGFycml2ZXMgdHdpY2UgcGVyIHllYXIsIGFuZCBhY2NlcHRzIHByaXNvbmVycyBhbmQgZ29sZCBpbiBleGNoYW5nZSBmb3IgaG9ub3IuAVJveWFsdHkAVGVycmFpbiBhZmZlY3RzIG1vdmVtZW50IHNwZWVkLiBCdWlsZCBmbG9vcnMgdG8gaGVscCB5b3VyIGNvbG9uaXN0cyBnZXQgYXJvdW5kIHF1aWNrZXIuAUNvcmUATG9zaW5nIHNlY3VyZWQgZGF0YWtleXMgY2FuIGJlIGNvbnNpZGVyZWQgYW4gYWN0IG9mIHRyZWFzb24gYW5kIHB1bmlzaGFibGUgYnkgZGVhdGguIFRoaXMgaXMgd2h5IHRoZSBtYWpvcml0eSBvZiBFbmNsYXZlIG9mZmljZXJzIGNhcnJ5IHRoZW0sIHJhdGhlciB0aGFuIHRha2luZyB0aGlzIHJpc2suAVRoZSBCcm90aGVyaG9vZCBDb21wZW5kaXVtICJDb250aW51ZWQi"

